#! /bin/zsh

# m6: zsh reconvert ../data/m6  480.37s user 7.20s system 99% cpu 8:07.94 total

# afaSimpGoblin4 \
# afaCnf4 \
# sepDelaying4 \
# afaSimpMincut5 \
# afaCnf5 \
# sepDelaying5 \
# afaCnf0 \
# sepDelaying0 \

for dir in \
  afa0 \
  afaBasic \
  afaCnf \
  afaSimpGoblinMincut3 \
  afaCnf3 \
  sepDelaying \
  sepDelaying3 \
  ada \
  ada3 \
  smv \
  smv3 \
  smvReverse \
  smvReverse3 \
  aig \
  aig3 \
  aigReverse \
  aigReverse3 \
  afaRand \
  afaRand3 \
  afaCnfRand \
  afaCnfRand3 \
  sepDelayingRand \
  sepDelayingRand3 \
  smvRand \
  smvRand3 \
  aigRand \
  aigRand3 \
  smvReverseRand \
  smvReverseRand3 \
  aigReverseRand \
  aigReverseRand3 \
  adaRand \
  adaRand3 \
  ;
do
  rm $1/$dir/*
  mkdir -p $1/$dir
done

cat $1/ltls| cabal exec ltle-to-afa -- -i ltl -o afa:$1/afa0 > $1/afa0.csv
# cabal exec ltle-to-afa -- -i stranger:$1/input -o afa:$1/afa0 +RTS -N8 > $1/afa0.csv

# cabal exec ltle-to-afa -- -i afa:$1/afa0 -o cnfafa:$1/afaCnf0 > $1/afaCnf0.csv
# cabal exec ltle-to-afa -- -i afa:$1/afa0 -o sepafaDelaying:$1/sepDelaying0 > $1/sepDelaying0.csv

cabal exec ltle-to-afa -- -i afa:$1/afa0 -o afaBasicSimp:$1/afaBasic +RTS -N8 > $1/afaBasic.csv
cabal exec ltle-to-afa -- -i afa:$1/afaBasic -o cnfafa:$1/afaCnf > $1/afaCnf.csv
cabal exec ltle-to-afa -- -i afa:$1/afaBasic -o sepafaDelaying:$1/sepDelaying > $1/sepDelaying.csv
cabal exec ltle-to-afa -- -i afa:$1/afaBasic -o ada:$1/ada > $1/ada.csv
cabal exec ltle-to-afa -- -i afa:$1/afaBasic -o smv:$1/smv > $1/smv.csv
cabal exec ltle-to-afa -- -i afa:$1/afaBasic -o smvReverse:$1/smvReverse > $1/smvReverse.csv
for f in $(ls $1/smv); do ../aiger/smvtoaig $1/smv/$f > $1/aig/$f; done
for f in $(ls $1/smvReverse); do ../aiger/smvtoaig $1/smvReverse/$f > $1/aigReverse/$f; done

cabal exec ltle-to-afa -- -i afa:$1/afaBasic -o afaRandomized:$1/afaRand +RTS -N8 > $1/afaRand.csv
cabal exec ltle-to-afa -- -i afa:$1/afaRand -o cnfafa:$1/afaCnfRand > $1/afaCnfRand.csv
cabal exec ltle-to-afa -- -i afa:$1/afaRand -o sepafaDelaying:$1/sepDelayingRand > $1/sepDelayingRand.csv
cabal exec ltle-to-afa -- -i afa:$1/afaRand -o ada:$1/adaRand > $1/adaRand.csv
cabal exec ltle-to-afa -- -i afa:$1/afaRand -o smv:$1/smvRand > $1/smvRand.csv
cabal exec ltle-to-afa -- -i afa:$1/afaRand -o smvReverse:$1/smvReverseRand > $1/smvReverseRand.csv
for f in $(ls $1/smvRand); do ../aiger/smvtoaig $1/smvRand/$f > $1/aigRand/$f; done
for f in $(ls $1/smvReverseRand); do ../aiger/smvtoaig $1/smvReverseRand/$f > $1/aigReverseRand/$f; done

cabal exec ltle-to-afa -- -i afa:$1/afaBasic -o afaSimpGoblinMincut:$1/afaSimpGoblinMincut3 +RTS -N8 > $1/afaSimpGoblinMincut3.csv
cabal exec ltle-to-afa -- -i afa:$1/afaSimpGoblinMincut3 -o cnfafa:$1/afaCnf3 +RTS -N8 > $1/afaCnf3.csv
cabal exec ltle-to-afa -- -i afa:$1/afaSimpGoblinMincut3 -o sepafaDelaying:$1/sepDelaying3 +RTS -N8 > $1/sepDelaying3.csv
cabal exec ltle-to-afa -- -i afa:$1/afaSimpGoblinMincut3 -o ada:$1/ada3 > $1/ada3.csv
cabal exec ltle-to-afa -- -i afa:$1/afaSimpGoblinMincut3 -o smv:$1/smv3 > $1/smv3.csv
cabal exec ltle-to-afa -- -i afa:$1/afaSimpGoblinMincut3 -o smvReverse:$1/smvReverse3 > $1/smvReverse3.csv
for f in $(ls $1/smv3); do ../aiger/smvtoaig $1/smv3/$f > $1/aig3/$f; done
for f in $(ls $1/smvReverse3); do ../aiger/smvtoaig $1/smvReverse3/$f > $1/aigReverse3/$f; done

cabal exec ltle-to-afa -- -i afa:$1/afaSimpGoblinMincut3 -o afaRandomized:$1/afaRand3 +RTS -N8 > $1/afaRand3.csv
cabal exec ltle-to-afa -- -i afa:$1/afaRand3 -o cnfafa:$1/afaCnfRand3 > $1/afaCnfRand3.csv
cabal exec ltle-to-afa -- -i afa:$1/afaRand3 -o sepafaDelaying:$1/sepDelayingRand3 > $1/sepDelayingRand3.csv
cabal exec ltle-to-afa -- -i afa:$1/afaRand3 -o ada:$1/adaRand3 > $1/adaRand3.csv
cabal exec ltle-to-afa -- -i afa:$1/afaRand3 -o smv:$1/smvRand3 > $1/smvRand3.csv
cabal exec ltle-to-afa -- -i afa:$1/afaRand3 -o smvReverse:$1/smvReverseRand3 > $1/smvReverseRand3.csv
for f in $(ls $1/smvRand3); do ../aiger/smvtoaig $1/smvRand3/$f > $1/aigRand3/$f; done
for f in $(ls $1/smvReverseRand3); do ../aiger/smvtoaig $1/smvReverseRand3/$f > $1/aigReverseRand3/$f; done

# cabal exec ltle-to-afa -- -i afa:$1/afaBasic -o afaSimpGoblin:$1/afaSimpGoblin4 > $1/afaSimpGoblin4.csv
# cabal exec ltle-to-afa -- -i afa:$1/afaSimpGoblin4 -o cnfafa:$1/afaCnf4 > $1/afaCnf4.csv
# cabal exec ltle-to-afa -- -i afa:$1/afaSimpGoblin4 -o sepafaDelaying:$1/sepDelaying4 > $1/sepDelaying4.csv

# cabal exec ltle-to-afa -- -i afa:$1/afaBasic -o afaSimpMincut:$1/afaSimpMincut5 > $1/afaSimpMincut5.csv
# cabal exec ltle-to-afa -- -i afa:$1/afaSimpMincut5 -o cnfafa:$1/afaCnf5 > $1/afaCnf5.csv
# cabal exec ltle-to-afa -- -i afa:$1/afaSimpMincut5 -o sepafaDelaying:$1/sepDelaying5 > $1/sepDelaying5.csv

cd ../afapipe

./build/file-solver-2 $1/afaCnf > $1/afasat.csv
./build/file-solver-2 $1/afaCnf3 > $1/afasat3.csv
# ./build/file-solver-2 $1/afaCnf0 > $1/afasat0.csv
# ./build/file-solver-2 $1/afaCnf4 > $1/afasat4.csv
# ./build/file-solver-2 $1/afaCnf5 > $1/afasat5.csv
./build/file-solver-3 $1/afaCnf > $1/afasatClausal.csv
./build/file-solver-3 $1/afaCnf3 > $1/afasatClausal3.csv
# ./build/file-solver-3 $1/afaCnf4 > $1/afasatClausal4.csv
# ./build/file-solver-3 $1/afaCnf5 > $1/afasatClausal5.csv
# ./build/file-solver-1 $1/sepDelaying0 > $1/dantoni0.csv
./build/file-solver-1 $1/sepDelaying > $1/dantoni.csv
./build/file-solver-1 $1/sepDelaying3 > $1/dantoni3.csv
# ./build/file-solver-1 $1/sepDelaying4 > $1/dantoni4.csv
# ./build/file-solver-1 $1/sepDelaying5 > $1/dantoni5.csv

./build/file-solver-2 $1/afaCnfRand > $1/afasatRand.csv
./build/file-solver-2 $1/afaCnfRand3 > $1/afasatRand3.csv
./build/file-solver-1 $1/sepDelayingRand > $1/dantoniRand.csv
./build/file-solver-1 $1/sepDelayingRand3 > $1/dantoniRand3.csv

rm -f $1/abc.csv
for f in $(ls -v $1/aig); do
  echo checking $f
  result=$(../abc/build/abc -c "read_aiger $1/aig/$f; pdr -T 60" | grep -E '^Property|^Output')
  {
    echo -n -e "$f\t"
    echo -n -e "$(($(echo $result | sed -r 's/.*Time =\s+([^ ]+).*/\1/')*1000))\t"
    if echo $result | grep Output > /dev/null; then
      echo 1
    elif echo $result | grep prove > /dev/null; then
      echo 0
    else
      echo -2
    fi
  } >> $1/abc.csv
done

rm -f $1/abc3.csv
for f in $(ls -v $1/aig3); do
  echo checking $f
  result=$(../abc/build/abc -c "read_aiger $1/aig3/$f; pdr -T 60" | grep -E '^Property|^Output')
  {
    echo -n -e "$f\t"
    echo -n -e "$(($(echo $result | sed -r 's/.*Time =\s+([^ ]+).*/\1/')*1000))\t"
    if echo $result | grep Output > /dev/null; then
      echo 1
    elif echo $result | grep prove > /dev/null; then
      echo 0
    else
      echo -2
    fi
  } >> $1/abc3.csv
done

rm -f $1/abcReverse.csv
for f in $(ls -v $1/aigReverse); do
  echo checking $f
  result=$(../abc/build/abc -c "read_aiger $1/aigReverse/$f; pdr -T 60" | grep -E '^Property|^Output')
  {
    echo -n -e "$f\t"
    echo -n -e "$(($(echo $result | sed -r 's/.*Time =\s+([^ ]+).*/\1/')*1000))\t"
    if echo $result | grep Output > /dev/null; then
      echo 1
    elif echo $result | grep prove > /dev/null; then
      echo 0
    else
      echo -2
    fi
  } >> $1/abcReverse.csv
done

rm -f $1/abcReverse3.csv
for f in $(ls -v $1/aigReverse3); do
  echo checking $f
  result=$(../abc/build/abc -c "read_aiger $1/aigReverse3/$f; pdr -T 60" | grep -E '^Property|^Output')
  {
    echo -n -e "$f\t"
    echo -n -e "$(($(echo $result | sed -r 's/.*Time =\s+([^ ]+).*/\1/')*1000))\t"
    if echo $result | grep Output > /dev/null; then
      echo 1
    elif echo $result | grep prove > /dev/null; then
      echo 0
    else
      echo -2
    fi
  } >> $1/abcReverse3.csv
done

rm -f $1/abcRand.csv
for f in $(ls -v $1/aigRand); do
  result=$(../abc/build/abc -c "read_aiger $1/aigRand/$f; pdr -T 60" | grep -E '^Property|^Output')
  {
    echo -n -e "$f\t"
    echo -n -e "$(($(echo $result | sed -r 's/.*Time =\s+([^ ]+).*/\1/')*1000))\t"
    if echo $result | grep Output > /dev/null; then
      echo 1
    elif echo $result | grep prove > /dev/null; then
      echo 0
    else
      echo -2
    fi
  } >> $1/abcRand.csv
done

rm -f $1/abcRand3.csv
for f in $(ls -v $1/aigRand3); do
  result=$(../abc/build/abc -c "read_aiger $1/aigRand3/$f; pdr -T 60" | grep -E '^Property|^Output')
  {
    echo -n -e "$f\t"
    echo -n -e "$(($(echo $result | sed -r 's/.*Time =\s+([^ ]+).*/\1/')*1000))\t"
    if echo $result | grep Output > /dev/null; then
      echo 1
    elif echo $result | grep prove > /dev/null; then
      echo 0
    else
      echo -2
    fi
  } >> $1/abcRand3.csv
done

rm -f $1/abcReverseRand.csv
for f in $(ls -v $1/aigReverseRand); do
  result=$(../abc/build/abc -c "read_aiger $1/aigReverseRand/$f; pdr -T 60" | grep -E '^Property|^Output')
  {
    echo -n -e "$f\t"
    echo -n -e "$(($(echo $result | sed -r 's/.*Time =\s+([^ ]+).*/\1/')*1000))\t"
    if echo $result | grep Output > /dev/null; then
      echo 1
    elif echo $result | grep prove > /dev/null; then
      echo 0
    else
      echo -2
    fi
  } >> $1/abcReverseRand.csv
done

rm -f $1/abcReverseRand3.csv
for f in $(ls -v $1/aigReverseRand3); do
  result=$(../abc/build/abc -c "read_aiger $1/aigReverseRand3/$f; pdr -T 60" | grep -E '^Property|^Output')
  {
    echo -n -e "$f\t"
    echo -n -e "$(($(echo $result | sed -r 's/.*Time =\s+([^ ]+).*/\1/')*1000))\t"
    if echo $result | grep Output > /dev/null; then
      echo 1
    elif echo $result | grep prove > /dev/null; then
      echo 0
    else
      echo -2
    fi
  } >> $1/abcReverseRand3.csv
done

# ./build/file-solver-1 $1/sepDelaying3 > $1/dantoniSat3.csv
# ./build/file-solver-1 $1/sepDelaying3 > $1/dantoniBdd3.csv
# ./build/file-solver-1 $1/sepDelaying3 > $1/dantoniSatBdd3.csv

# ./build/file-solver-1-2 $1/sepDelaying3 $1/afaCnf3 > $1/dantoni3-afasat3.csv


# ./build/file-solver-2 $1/afaCnf > $1/afasat.csv
# ./build/file-solver-2 $1/afaCnf3Part > $1/afasat3Part.csv

# ./build/file-solver-3 $1/afaCnfPart > $1/afasatClausalPart.csv
# ./build/file-solver-3 $1/afaCnf3Part > $1/afasatClausal3Part.csv

# ./build/file-solver-1 $1/sepDelayingPart >> $1/dantoniPart.csv
# ./build/file-solver-1 $1/sepDelaying3Part >> $1/dantoni3Part.csv

cd ../JAltImpact

rm -f $1/jimpact.csv
for f in $(ls -v $1/ada); do
  echo checking $f
  cp $1/ada/$f /tmp/jimpact.ada
  timeout 60 ant -Dmodel.path=/tmp/jimpact.ada > /tmp/jimpact.log
  result=$?
  {
    echo -n -e "$f\t"
    if [ $result = 124 ]; then
      echo -e "60000\t-2"
    else
      if cat /tmp/jimpact.log | grep 'NOT EMPTY' > /dev/null; then
        echo -n -e "$(cat /tmp/jimpact.log | grep 'Time Cost' | sed 's/.*: //')\t"
        echo 1
      elif cat /tmp/jimpact.log | grep 'EMPTY' > /dev/null; then
        echo -n -e "$(cat /tmp/jimpact.log | grep 'Time Cost' | sed 's/.*: //')\t"
        echo 0
      else
        echo "60000\t-3"
      fi
    fi
  } >> $1/jimpact.csv
done

rm -f $1/jimpact3.csv
for f in $(ls -v $1/ada3); do
  echo checking $f
  cp $1/ada3/$f /tmp/jimpact.ada
  timeout 60 ant -Dmodel.path=/tmp/jimpact.ada > /tmp/jimpact.log
  result=$?
  {
    echo -n -e "$f\t"
    if [ $result = 124 ]; then
      echo -e "60000\t-2"
    else
      if cat /tmp/jimpact.log | grep 'NOT EMPTY' > /dev/null; then
        echo -n -e "$(cat /tmp/jimpact.log | grep 'Time Cost' | sed 's/.*: //')\t"
        echo 1
      elif cat /tmp/jimpact.log | grep 'EMPTY' > /dev/null; then
        echo -n -e "$(cat /tmp/jimpact.log | grep 'Time Cost' | sed 's/.*: //')\t"
        echo 0
      else
        echo "60000\t-3"
      fi
    fi
  } >> $1/jimpact3.csv
done

rm -f $1/jimpactRand.csv
for f in $(ls -v $1/adaRand); do
  cp $1/adaRand/$f /tmp/jimpact.ada
  timeout 60 ant -Dmodel.path=/tmp/jimpact.ada > /tmp/jimpact.log
  result=$?
  {
    echo -n -e "$f\t"
    if [ $result = 124 ]; then
      echo -e "60000\t-2"
    else
      if cat /tmp/jimpact.log | grep 'NOT EMPTY' > /dev/null; then
        echo -n -e "$(cat /tmp/jimpact.log | grep 'Time Cost' | sed 's/.*: //')\t"
        echo 1
      elif cat /tmp/jimpact.log | grep 'EMPTY' > /dev/null; then
        echo -n -e "$(cat /tmp/jimpact.log | grep 'Time Cost' | sed 's/.*: //')\t"
        echo 0
      else
        echo "60000\t-3"
      fi
    fi
  } >> $1/jimpactRand.csv
done

rm -f $1/jimpactRand3.csv
for f in $(ls -v $1/adaRand3); do
  cp $1/adaRand3/$f /tmp/jimpact.ada
  timeout 60 ant -Dmodel.path=/tmp/jimpact.ada > /tmp/jimpact.log
  result=$?
  {
    echo -n -e "$f\t"
    if [ $result = 124 ]; then
      echo -e "60000\t-2"
    else
      if cat /tmp/jimpact.log | grep 'NOT EMPTY' > /dev/null; then
        echo -n -e "$(cat /tmp/jimpact.log | grep 'Time Cost' | sed 's/.*: //')\t"
        echo 1
      elif cat /tmp/jimpact.log | grep 'EMPTY' > /dev/null; then
        echo -n -e "$(cat /tmp/jimpact.log | grep 'Time Cost' | sed 's/.*: //')\t"
        echo 0
      else
        echo "60000\t-3"
      fi
    fi
  } >> $1/jimpactRand3.csv
done
